{"version":3,"sources":["context/TilesContext.js","styles/styles.js","components/Tile.js","components/StakeBtn.js","components/StakeInput.js","components/StakePanel.js","components/LuckyPick.js","components/PlaceBet.js","components/MainBoard.js","App.js","index.js"],"names":["TilesContext","React","createContext","TilesContextProvider","props","useState","tiles","stakes","id","selected","stakeInputValue","stakeValue","allSelected","completed","state","setState","Provider","value","children","useStyles","createUseStyles","body","margin","padding","boxSizing","fontFamily","main","display","flexDirection","alignItems","justifyContent","board","flexWrap","maxWidth","title","fontSize","color","line","width","height","border","tile","minWidth","minHeight","backgroundColor","tile2","stakePanel","stakeBtn","textAlign","lineHeight","stakeBtnSelected","input","placeBetBtn","cursor","placeBetBtnHover","bottom","marginTop","luckyBtn","luckyBtnHover","Tile","useContext","classes","styles","styles2","handleClick","items","countSelected","className","key","onClick","StakeBtn","stylesBtn","newStakes","map","item","StakeInput","toString","inputValue","setInputValue","useEffect","onSubmit","e","preventDefault","onChange","str","target","split","slice","parseInt","onFocus","onBlur","StakePanel","LuckyPick","setStyles","i","randomNum","Math","floor","random","onMouseMove","onMouseOut","PlaceBet","clearPanel","number","alert","MainBoard","initTiles","push","jss","use","vendorPrefixer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f21012d7.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nconst TilesContext = React.createContext([{}, ()=>{}]);\r\n\r\nconst TilesContextProvider = (props)=>{\r\n\r\n  const [state, setState] = useState({\r\n    tiles: [],\r\n    stakes: [\r\n      { id : 0 , selected: false },\r\n      { id : 1 , selected: false },\r\n      { id : 2 , selected: false },\r\n      { id : 3 , selected: false },\r\n      { id : 4 , selected: false },\r\n    ],\r\n    stakeInputValue:0,\r\n    stakeValue: 0,\r\n    allSelected : 0,\r\n    completed : false\r\n  });\r\n\r\n  return (\r\n    <TilesContext.Provider value={[state,setState]}>\r\n      {props.children}\r\n    </TilesContext.Provider>\r\n  )\r\n}\r\n\r\nexport {TilesContext, TilesContextProvider};","import { createUseStyles } from \"react-jss\";\r\n\r\n\r\nexport const useStyles = createUseStyles({\r\n  body : {\r\n    margin: \"0px\",\r\n    padding: \"0px\",\r\n    boxSizing: \"border-box\",\r\n    fontFamily: \"Arial, Helvetica, sans-serif\"\r\n  \r\n  },\r\n\r\n  main :{\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n\r\n  },\r\n  board: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    maxWidth: \"615px\",\r\n\r\n  },\r\n  title :{\r\n    margin: \"20px 0\",\r\n    fontSize: \"16px\",\r\n    color: \"red\"\r\n  },\r\n  line : {\r\n    width: \"95%\",\r\n    height: \"2px\",\r\n    border: \"1px solid red\",\r\n  },\r\n\r\n  tiles: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    maxWidth: \"620px\",\r\n  },\r\n  tile: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    minWidth: \"45px\",\r\n    minHeight: \"40px\",\r\n    margin: \"6px\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    fontSize: \"12px\"\r\n  },\r\n  tile2: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n\r\n    minWidth: \"45px\",\r\n    minHeight: \"40px\",\r\n    margin: \"6px\",\r\n\r\n    backgroundColor: \"red\",\r\n    color: \"white\",\r\n    fontSize: \"12px\"\r\n\r\n  },\r\n  selected: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n\r\n    minWidth: \"41px\",\r\n    minHeight: \"36px\",\r\n    margin: \"6px\",\r\n    border: \"2px solid black\",\r\n    backgroundColor: \"green\",\r\n    color: \"white\",\r\n  },\r\n \r\n  stakePanel: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    width: \"90%\",\r\n  },\r\n  \r\n  stakeBtn: {\r\n    display: \"block\",\r\n    height: \"25px\",\r\n    width: \"85px\",\r\n    backgroundColor: \"white\",\r\n    color: \"gray\",\r\n    textAlign: \"center\",\r\n    lineHeight: \"25px\",\r\n    fontSize: \"12px\",\r\n    border: \"1px solid black\",\r\n\r\n\r\n  },\r\n  stakeBtnSelected: {\r\n    display: \"block\",\r\n    height: \"25px\",\r\n    width: \"85px\",\r\n    backgroundColor: \"gray\",\r\n    color: \"white\",\r\n    textAlign: \"center\",  \r\n    lineHeight: \"25px\",\r\n    fontSize: \"12px\",\r\n    border: \"1px solid black\",\r\n  },\r\n  input : {\r\n    height: \"25px\",\r\n    width: \"85px\",\r\n\r\n  },\r\n  placeBetBtn: {\r\n    height: \"25px\",\r\n    width: \"85px\",\r\n    padding: \"0 10px\",\r\n    textAlign: \"center\",\r\n    lineHeight: \"25px\",\r\n    backgroundColor: \"red\",\r\n    color: \"white\",\r\n    fontSize: \"12px\",\r\n    cursor: \"pointer\"\r\n  },\r\n  placeBetBtnHover: {\r\n    height: \"25px\",\r\n    width: \"85px\",\r\n    padding: \"0 10px\",\r\n    textAlign: \"center\",\r\n    lineHeight: \"25px\",\r\n    backgroundColor: \"white\",\r\n    color: \"red\",\r\n    fontSize: \"12px\",\r\n    cursor: \"pointer\",\r\n    border: \"1px solid red\",\r\n\r\n  },\r\n\r\n  bottom: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    marginTop: \"20px\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    width: \"90%\",\r\n  },\r\n\r\n   luckyBtn: {\r\n    height: \"25px\",\r\n    width: \"85px\",\r\n    padding: \"0 10px\",\r\n    textAlign: \"center\",\r\n    lineHeight: \"25px\",\r\n    backgroundColor: \"DarkBlue\",\r\n    color: \"white\",\r\n    fontSize: \"12px\",\r\n    cursor: \"pointer\"\r\n\r\n   },\r\n  luckyBtnHover: {\r\n    height: \"25px\",\r\n    width: \"85px\",\r\n    padding: \"0 10px\",\r\n    textAlign: \"center\",\r\n    lineHeight: \"25px\",\r\n    backgroundColor: \"white\",\r\n    border: \"1px solid DarkBlue\",\r\n    color: \"DarkBlue\",\r\n    fontSize: \"12px\",\r\n    cursor: \"pointer\"\r\n  },\r\n\r\n\r\n});","import React from 'react';\r\nimport {TilesContext} from  '../context/TilesContext';\r\nimport {useStyles} from '../styles/styles';\r\n\r\nconst Tile = ({id}) => {\r\n    const [state, setState] = React.useContext(TilesContext);\r\n    const classes = useStyles();\r\n\r\n    let styles = (state.tiles[id].selected)? classes.selected : classes.tile;\r\n    let styles2 = (state.tiles[id].selected) ? classes.selected : classes.tile2;\r\n\r\n    const handleClick = (id)=>{\r\n      \r\n      let items = state.tiles;\r\n      let countSelected = state.allSelected;\r\n\r\n      countSelected = (items[id].selected) ? countSelected - 1 : countSelected + 1;\r\n      \r\n      if ( countSelected<=5 ) {\r\n\r\n        items[id].selected = !items[id].selected;\r\n\r\n        setState(state=>({...state, tiles : items, allSelected: countSelected }))\r\n      } \r\n      else if ( countSelected = 5 && !items[id].selected ) {\r\n        countSelected = (items[id].selected) ? countSelected - 1 : countSelected + 1;\r\n      }\r\n    }\r\n\r\n  return (  \r\n      <>\r\n        {(id<40)? <div className={styles} key={id} onClick={()=>handleClick(id)}>{id+1}</div> :\r\n        <div className={styles2} key={id} onClick={()=>handleClick(id)}>{id+1}</div>}\r\n      </>\r\n  );\r\n}\r\n \r\nexport default Tile;","import React from 'react';\r\nimport {useStyles} from '../styles/styles';\r\nimport {TilesContext} from  '../context/TilesContext';\r\n\r\n\r\nconst StakeBtn = ({id,value})=> {\r\n  const [state, setState] = React.useContext(TilesContext);\r\n  const classes = useStyles();\r\n  let selected = state.stakes[id].selected;\r\n  let stakes = state.stakes;\r\n\r\n\r\n  let stylesBtn = (selected) ? classes.stakeBtnSelected : classes.stakeBtn;\r\n\r\n  const handleClick= ()=>{\r\n    \r\n    const newStakes = stakes.map(item=> ({id:item.id, selected:false}));\r\n    newStakes[id].selected = !newStakes[id].selected;\r\n    setState(state => ({...state, stakeValue: value , stakes: newStakes, stakeInputValue: 0, completed: true  }));  \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className = {stylesBtn} onClick={()=>handleClick(id)}>{value}</div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default StakeBtn;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {TilesContext} from  '../context/TilesContext';\r\nimport {useStyles} from '../styles/styles';\r\n\r\n\r\nconst StakeInput = ()=> {\r\n  const [state, setState] = React.useContext(TilesContext);\r\n  const [inputValue, setInputValue] = useState(state.stakeInputValue.toString());\r\n  const classes = useStyles();\r\n\r\n  useEffect(()=>{\r\n          if(state.completed) {\r\n                  setState(state => ({...state, completed:false , stakeInputValue: 0 })); \r\n                  setInputValue(\"0\");\r\n\r\n          }\r\n  },[state])\r\n  const handleChange = (e)=>{\r\n    let str = e.target.value;\r\n    \r\n    if (str === \"\") {\r\n      setInputValue(\"\");\r\n      return\r\n    }\r\n\r\n    let xkey = e.target.value;\r\n   \r\n    let key = xkey.split('')\r\n    key = key.slice(-1)\r\n     \r\n    if (parseInt(key[0]) >= 0 && parseInt(key[0]) <= 9) {\r\n      // str = str + key;\r\n      setInputValue(str);\r\n      setState(state => ({...state, stakeValue: parseInt(str), stakeInputValue: parseInt(str) })); \r\n    }\r\n    \r\n  }\r\n\r\n  const handleSubmit = (e)=>{\r\n    e.preventDefault()\r\n  }\r\n\r\n  const handleFocus = ()=> {\r\n    let stakes = state.stakes;\r\n    const newStakes = stakes.map(item=> ({id:item.id, selected:false}));\r\n    setState(state => ({...state, stakeValue: 0 , stakes: newStakes })); \r\n    setInputValue(\"\");\r\n  }\r\n\r\n  const handleOnBlur = ()=>{\r\n    if (inputValue === \"\") {setInputValue(\"0\")};\r\n  }\r\n\r\n  return (\r\n    <div ><form onSubmit={handleSubmit}><input className={classes.input} onChange={handleChange} onFocus={handleFocus} onBlur={handleOnBlur} value={inputValue} ></input></form></div>\r\n  )\r\n}\r\n\r\nexport default StakeInput;","import React from 'react';\r\nimport StakeBtn from './StakeBtn';\r\nimport StakeInput from './StakeInput';\r\nimport {useStyles} from '../styles/styles';\r\n\r\nconst StakePanel = ()=> {\r\n  const classes = useStyles();\r\n  \r\n\r\n  return (\r\n   \r\n    <div className={classes.stakePanel}>\r\n      <StakeBtn id={0} value={50}/>\r\n      <StakeBtn id={1} value={100}/>\r\n      <StakeBtn id={2} value={200}/>\r\n      <StakeBtn id={3} value={500}/>\r\n      <StakeBtn id={4} value={1000}/>\r\n      \r\n      <StakeInput/>\r\n    </div>\r\n  \r\n  )\r\n}\r\n\r\nexport default StakePanel;","import React, {useState} from 'react';\r\nimport {TilesContext} from  '../context/TilesContext';\r\nimport {useStyles} from '../styles/styles';\r\n\r\nconst LuckyPick = ()=> {\r\n  const [state, setState] = React.useContext(TilesContext);\r\n  const classes = useStyles();\r\n   const [styles, setStyles] = useState(classes.luckyBtn)\r\n\r\n\r\n\r\n  const handleClick = ()=>{\r\n    let items = state.tiles;\r\n    items.map(item=> item.selected=false)\r\n      for (let i=0; i<5; i++) {\r\n        let randomNum = Math.floor(Math.random() * 79);\r\n        items[randomNum].selected = true;\r\n      }\r\n      \r\n        setState(state=>({...state, tiles : items, allSelected: 5 }))\r\n  }\r\n\r\n  return (\r\n    <div className={styles} \r\n      onClick={handleClick}\r\n      onMouseMove={()=>{ setStyles(classes.luckyBtnHover) }} \r\n      onMouseOut ={()=>{ setStyles(classes.luckyBtn) }}\r\n      \r\n      >Lucky Pick</div>\r\n  )\r\n}\r\n\r\nexport default LuckyPick;","import React, {useState} from 'react';\r\nimport {TilesContext} from  '../context/TilesContext';\r\nimport {useStyles} from '../styles/styles';\r\n\r\nconst PlaceBet = ()=> {\r\n  const [state, setState] = React.useContext(TilesContext);\r\n  const classes = useStyles();\r\n  const [styles, setStyles] = useState(classes.placeBetBtn)\r\n  let {tiles, allSelected, stakeValue, stakes} = state;\r\n\r\n\r\n\r\n  const handleClick =()=>{\r\n\r\n    if (allSelected === 5 && stakeValue > 0) {\r\n      alert(`CONGRATULATIONS!!! \\n\\nYou have successfully placed a bet on Keno Lottery`)\r\n      clearPanel()\r\n    }\r\n    else {\r\n      alert(`You have to pick 5 numbers and provide the stake. Please complete necessary details.`)\r\n      \r\n    }\r\n  }\r\n\r\n  const clearPanel =()=>{\r\n    let items=tiles\r\n    items.map(item => item.selected = false)\r\n\r\n    const newTiles = tiles.map(item=> ({number:item.id, selected:false}));\r\n    const newStakes = stakes.map(item=> ({id:item.id, selected:false}));\r\n    \r\n    setState(state => ({...state, tiles : items, stakeValue: 0 , stakes: newStakes, allSelected:0, stakeInputValue : 0, completed: true })); \r\n  \r\n  }\r\n\r\n  return (  \r\n      <div className={styles} \r\n        onClick={handleClick} \r\n        onMouseMove={()=>{ setStyles(classes.placeBetBtnHover) }} \r\n        onMouseOut ={()=>{ setStyles(classes.placeBetBtn) }}\r\n      >PlaceBet</div>\r\n     )\r\n}\r\n\r\nexport default PlaceBet;","import React, {useEffect}  from 'react';\r\nimport {TilesContext} from  '../context/TilesContext';\r\nimport {useStyles} from '../styles/styles';\r\nimport Tile from './Tile';\r\nimport StakePanel from './StakePanel';\r\nimport LuckyPick from './LuckyPick';\r\nimport PlaceBet from './PlaceBet';\r\n\r\n\r\nconst MainBoard = ()=> {\r\n\r\n  const [state , setState]=React.useContext(TilesContext);\r\n  const classes = useStyles();\r\n\r\n  useEffect(()=>{ \r\n    let initTiles = [];\r\n    for (let i=0; i<80 ; i++){\r\n      initTiles.push({number : i, selected: false})      \r\n    };\r\n    \r\n    setState(state => ({...state, tiles : initTiles }))\r\n\r\n  },[])\r\n\r\n\r\n  let tiles = state.tiles;\r\n\r\n  return (\r\n    <div className={classes.board}>\r\n    <div className={classes.line}></div>  \r\n      <div className={classes.tiles}>\r\n      {tiles.map(item=>(\r\n        <Tile key={item.number} id={item.number}/>\r\n        ))}\r\n      </div>\r\n\r\n      <StakePanel/>\r\n      <div className={classes.bottom}>\r\n          <LuckyPick/>\r\n          <PlaceBet/>\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainBoard;","import React from 'react';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport MainBoard from './components/MainBoard';\nimport {useStyles} from './styles/styles';\n\nimport {JssProvider} from 'react-jss'\nimport {jss} from 'react-jss'\nimport vendorPrefixer from 'jss-plugin-vendor-prefixer'\n\nimport {TilesContextProvider} from './context/TilesContext';\n\njss.use(vendorPrefixer())\n\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <JssProvider jss={jss}>\n      <BrowserRouter>\n        <TilesContextProvider>\n          <div className={classes.body}>\n            <div className={classes.main}>\n              <h1 className={classes.title}>Keno</h1>\n              <MainBoard/>    \n            </div>\n          </div>\n        </TilesContextProvider>\n      </BrowserRouter>\n    </JssProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}